{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","message","handleKeyUp","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAOaA,EAAb,4MACEC,MAAe,CACbC,WAAY,GACZC,QAAS,2BAHb,EAcEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,KAAO,MAf7C,uDAME,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAP5C,kCAUE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAX/C,oBAkBE,WACE,MAAgCM,KAAKT,MAA7BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,QAEpB,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIV,EAAD,mCAE+BA,EAF/B,KACGC,UAzBd,GAAyBU,IAAMC,W,MCF/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.e4986c6c.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string;\n  message: string;\n};\n\nexport class App extends React.Component {\n  state: State = {\n    pressedKey: '',\n    message: 'Nothing was pressed yet',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key || '' });\n  };\n\n  render() {\n    const { pressedKey, message } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {!pressedKey\n            ? message\n            : `The last pressed key is [${pressedKey}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}